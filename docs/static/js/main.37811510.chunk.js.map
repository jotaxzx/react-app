{"version":3,"sources":["Componentes/AddCategory.js","Componentes/GifGridItem.js","helpers/getGifs.js","Componentes/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","GifGridItem","img","console","log","className","src","url","alt","title","getGif","category","a","fetch","encodeURI","resp","json","data","gifs","map","id","images","downsized_medium","GifGrid","setImages","useEffect","then","imgs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAqB5C,OAEQ,0BAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OASV,2BACIO,YAAY,gBAEZC,KAAK,OACLC,MAAQV,EACRW,SAzBU,SAACR,GACvB,OACAF,EAAeE,EAAES,OAAOF,YCTnBG,EAAc,SAAEC,GAIzB,OAFAC,QAAQC,IAAIF,GAGR,yBAAKG,UAAU,QACX,yBAAKC,IAAKJ,EAAIK,IAAKC,IAAKN,EAAIO,QAC5B,+BAAKP,EAAIO,MAAT,O,uBCTCC,EAAM,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEAECC,MAAM,0CAAD,OAA4CC,UAAWH,GAAvD,uDAFN,cAEZI,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAK,SAAAjB,GACnB,MAAM,CACFkB,GAAIlB,EAAIkB,GACRX,MAAOP,EAAIO,MACXF,IAAKL,EAAImB,OAAOC,iBAAiBf,QASzCJ,QAAQC,IAAIc,GAlBM,kBAmBXA,GAnBW,4CAAH,sDCINK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,EAGTxB,mBAAS,IAHA,mBAG9BkC,EAH8B,KAGtBG,EAHsB,KAWjC,OANIC,qBAAW,WACXf,EAAQC,GACHe,MAAM,SAAAC,GAAI,OAAIH,EAAUG,QAC3B,CAAEhB,IAIJ,oCACY,4BAAKA,EAAL,KACJ,yBAAKN,UAAU,aAEPgB,EAAOF,KAAK,SAAAjB,GAAG,OACX,kBAAC,EAAD,eAEI0B,IAAM1B,EAAIkB,IACNlB,UCpB3B2B,EAAe,WAAM,MAIM1C,mBAAS,CAAC,cAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAO9B,OAEK,oCACG,wBAAImB,UAAU,SAAd,gBACA,kBAAC,EAAD,CAAanB,cAAgBA,IAC7B,6BAEA,4BAGI4C,EAAWX,KAAM,SAAAR,GAAQ,OAErB,kBAAC,EAAD,CACAiB,IAAMjB,EACNA,SAAWA,UClB/BoB,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.37811510.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n// le paso como argumento el setCategorias para poder agregar mas cagtegorias provenientes del input\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [InputValue, setInputValue] = useState('') \r\n\r\n    const handleInputChange = (e) => {\r\n        return (\r\n        setInputValue( e.target.value )\r\n        )\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // prevenir el comportamiento del formulario\r\n        \r\n        if (InputValue.trim().length > 1 ) {\r\n            setCategories( cats => [ InputValue, ...cats] ); // el cats es la referencia del arreglo anterior.\r\n            setInputValue(''); // que luego de escribir me sete el campo vacio\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={ handleSubmit }> \r\n                <input \r\n                    placeholder=\"\r\n                    Buscar Gif\"\r\n                    type=\"text\"\r\n                    value={ InputValue }\r\n                    onChange={ handleInputChange } // se disparar cada vez que la caja de texto cambie, es la unica forma, usando onChange.\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired  // esto hace que setCategorias sea un argumento requerido en addCategory!\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( img ) => {\r\n\r\n    console.log(img);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={img.url} alt={img.title} />\r\n            <p> {img.title} </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGif = async( category ) => {\r\n        \r\n    const resp = await fetch(`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=5efB7K5m2PnDHmOzA89CgA02nMtVV5xQ`);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n        }\r\n        \r\n    })\r\n\r\n\r\n\r\n\r\n    console.log(gifs);\r\n    return gifs;\r\n    \r\n}","import React, { useEffect, useState } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n    \r\n    //recibir categoria y hacer peticion http\r\n    const [images, setImages] = useState([]);\r\n\r\n            useEffect( () => {\r\n            getGif( category )\r\n                .then( imgs => setImages(imgs));\r\n            },[ category ]) // esto hace que la peticion solo se dispare 1 vez cada vez que cambia algo del componente.\r\n\r\n            \r\n        return (\r\n            <>\r\n                        <h3>{category} </h3>\r\n                    <div className=\"card-grid\">\r\n                        {\r\n                            images.map( img =>( \r\n                                <GifGridItem \r\n                                    \r\n                                    key={ img.id }\r\n                                    {...img}/> //para mandar la img debo hacerlo con spred(...img)\r\n                            ))\r\n                        }\r\n                    </div>\r\n            \r\n            \r\n            </>\r\n        \r\n        )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './Componentes/AddCategory';\r\nimport { GifGrid } from './Componentes/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categorias = [\"Dragon Ball\", 'Slum Dunk', 'One Punch'] ;\r\n\r\n    const [categories, setCategories] = useState(['Samurai x']);\r\n\r\n\r\n    return (\r\n\r\n         <>\r\n            <h2 className=\"title\">GifExpertapp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                \r\n                categories.map(  category  =>  // barrer los elementos de categories pasandolos a la variable category\r\n\r\n                    <GifGrid\r\n                    key={ category }\r\n                    category={ category } />\r\n                \r\n                )\r\n\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n          \r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}